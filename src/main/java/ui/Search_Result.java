
package ui;

import adminrole.Admin;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Student;


public class Search_Result extends javax.swing.JFrame {

    private Student student;
    private Admin admin = new Admin();

    /**
     * Creates new form Search_Result
     */
    public Search_Result(Student student) {
        this.student = student;
        initComponents();
        loadTable();
        setTitle("Search Result");
    }
    
    public Search_Result() {
        initComponents();
        setTitle("Search Result");
    }
    
    public void loadTable() {
        DefaultTableModel m = (DefaultTableModel) tableField.getModel();
        m.setRowCount(0);
        m.addRow(new Object[]{student.getID(), student.getName(), student.getAge(), student.getGender(), student.getDepartment(), student.getGPA()});
    }
    
    public void loadTable_byname(ArrayList<Student> l) {

        DefaultTableModel m = (DefaultTableModel) tableField.getModel();
        m.setRowCount(0);
        for (Student s : l) {
        m.addRow(new Object[]{s.getID(),s.getName(),s.getAge(),s.getGender(),s.getDepartment(),s.getGPA()});}
        
        }

    public void validate_name(String Name){

     char[]name=Name.toCharArray();
     
     for(int i=0;i<Name.length();i++){
      if(!Character.isLetter(name[i]))
       throw new IllegalArgumentException("Name must be letters only");
     }
     
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableField = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        Update = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableField.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Age", "Gender", "Department", "GPA"
            }
        ));
        jScrollPane1.setViewportView(tableField);
        if (tableField.getColumnModel().getColumnCount() > 0) {
            tableField.getColumnModel().getColumn(4).setMinWidth(140);
        }

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Update)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(Update))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        this.setVisible(false);
    }                                        


    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed

          DefaultTableModel model = (DefaultTableModel) tableField.getModel();
          
        if (tableField.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Please select a student to update!", "No Selection", JOptionPane.ERROR_MESSAGE);
            return;
        }
         if (tableField.isEditing()) {
          tableField.getCellEditor().stopCellEditing();
          }
        
          try{
            String id = model.getValueAt(0, 0).toString();
            String name = model.getValueAt(0, 1).toString();
            int age = Integer.parseInt(model.getValueAt(0, 2).toString());
            String gender = model.getValueAt(0, 3).toString();
            String dept = model.getValueAt(0, 4).toString();
            double gpa = Double.parseDouble(model.getValueAt(0, 5).toString());
            
             validate_name(name);
             
            if (student != null && student.getID().equals(id)){
            student.setName(name);
            student.setAge(age);
            student.setGender(gender);
            student.setDepartment(dept);
            student.setGPA(gpa);
            admin.updateStudent(student);
            }
            else{
             Student s=new Student(name, age, gender, dept, gpa);
             s.setNewID(id);
             admin.updateStudent(s);
            }
            
            admin.logout();
            JOptionPane.showMessageDialog(this, "Edited successfully");
            tableField.clearSelection();
          }
       catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Validation Error", JOptionPane.ERROR_MESSAGE);
        }   

    }//GEN-LAST:event_UpdateActionPerformed

                                          

        
    
        /**
         * @param args the command line arguments
         */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search_Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search_Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search_Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search_Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }

    // Variables declaration - do not modify                     
    private javax.swing.JToggleButton Update;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableField;

    // End of variables declaration                   

    // End of variables declaration                   

}
